/* Simulation code for T05_3DICE_Integration.T05_Interface3DICE generated by the OpenModelica Compiler OpenModelica 1.18.1. */
#if !defined(T05_3DICE_Integration_T05_Interface3DICE__MODEL_H)
#define T05_3DICE_Integration_T05_Interface3DICE__MODEL_H

#include "openmodelica.h"
#include "openmodelica_func.h"
#include "simulation_data.h"
#include "simulation/simulation_info_json.h"
#include "simulation/simulation_runtime.h"
#include "util/omc_error.h"
#include "util/parallel_helper.h"
#include "simulation/solver/model_help.h"
#include "simulation/solver/delay.h"
#include "simulation/solver/linearSystem.h"
#include "simulation/solver/nonlinearSystem.h"
#include "simulation/solver/mixedSystem.h"
#include "simulation/solver/spatialDistribution.h"

#if defined(__cplusplus)
extern "C" {
#endif

#include <string.h>

#include "T05_3DICE_Integration_T05_Interface3DICE_functions.h"

#define ComputerCooling_Functions_Clamp_index 0
#define ComputerCooling_Functions_sqrtReg_index 1
#define ComputerCooling_Functions_sqrtReg__der_index 2
#define Modelica_Utilities_Streams_error_index 3
#define Modelica_Utilities_Streams_print_index 4
#define Modelica_Utilities_Strings_compare_index 5
#define Modelica_Utilities_Strings_find_index 6
#define Modelica_Utilities_Strings_isEqual_index 7
#define Modelica_Utilities_Strings_length_index 8
#define Modelica_Utilities_Strings_repeat_index 9
#define Modelica_Utilities_Strings_scanReal_index 10
#define Modelica_Utilities_Strings_substring_index 11
#define Modelica_Utilities_Strings_syntaxError_index 12
#define Modelica_Utilities_Strings_Advanced_scanReal_index 13
#define Modelica_Utilities_Strings_Advanced_skipWhiteSpace_index 14
#define T05__3DICE__Integration_T05__Interface3DICE_Parse_index 15

extern void T05_3DICE_Integration_T05_Interface3DICE_callExternalObjectDestructors(DATA *_data, threadData_t *threadData);
#if !defined(OMC_NUM_NONLINEAR_SYSTEMS) || OMC_NUM_NONLINEAR_SYSTEMS>0
extern void T05_3DICE_Integration_T05_Interface3DICE_initialNonLinearSystem(int nNonLinearSystems, NONLINEAR_SYSTEM_DATA *data);
#endif
#if !defined(OMC_NUM_LINEAR_SYSTEMS) || OMC_NUM_LINEAR_SYSTEMS>0
extern void T05_3DICE_Integration_T05_Interface3DICE_initialLinearSystem(int nLinearSystems, LINEAR_SYSTEM_DATA *data);
#endif
#if !defined(OMC_NUM_MIXED_SYSTEMS) || OMC_NUM_MIXED_SYSTEMS>0
#endif
#if !defined(OMC_NO_STATESELECTION)
extern void T05_3DICE_Integration_T05_Interface3DICE_initializeStateSets(int nStateSets, STATE_SET_DATA* statesetData, DATA *data);
#endif
extern int T05_3DICE_Integration_T05_Interface3DICE_functionAlgebraics(DATA *data, threadData_t *threadData);
extern int T05_3DICE_Integration_T05_Interface3DICE_function_storeDelayed(DATA *data, threadData_t *threadData);
extern int T05_3DICE_Integration_T05_Interface3DICE_function_storeSpatialDistribution(DATA *data, threadData_t *threadData);
extern int T05_3DICE_Integration_T05_Interface3DICE_function_initSpatialDistribution(DATA *data, threadData_t *threadData);
extern int T05_3DICE_Integration_T05_Interface3DICE_updateBoundVariableAttributes(DATA *data, threadData_t *threadData);
extern int T05_3DICE_Integration_T05_Interface3DICE_functionInitialEquations(DATA *data, threadData_t *threadData);
extern int T05_3DICE_Integration_T05_Interface3DICE_functionInitialEquations_lambda0(DATA *data, threadData_t *threadData);
extern int T05_3DICE_Integration_T05_Interface3DICE_functionRemovedInitialEquations(DATA *data, threadData_t *threadData);
extern int T05_3DICE_Integration_T05_Interface3DICE_updateBoundParameters(DATA *data, threadData_t *threadData);
extern int T05_3DICE_Integration_T05_Interface3DICE_checkForAsserts(DATA *data, threadData_t *threadData);
extern int T05_3DICE_Integration_T05_Interface3DICE_function_ZeroCrossingsEquations(DATA *data, threadData_t *threadData);
extern int T05_3DICE_Integration_T05_Interface3DICE_function_ZeroCrossings(DATA *data, threadData_t *threadData, double* gout);
extern int T05_3DICE_Integration_T05_Interface3DICE_function_updateRelations(DATA *data, threadData_t *threadData, int evalZeroCross);
extern const char* T05_3DICE_Integration_T05_Interface3DICE_zeroCrossingDescription(int i, int **out_EquationIndexes);
extern const char* T05_3DICE_Integration_T05_Interface3DICE_relationDescription(int i);
extern void T05_3DICE_Integration_T05_Interface3DICE_function_initSample(DATA *data, threadData_t *threadData);
extern int T05_3DICE_Integration_T05_Interface3DICE_initialAnalyticJacobianG(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int T05_3DICE_Integration_T05_Interface3DICE_initialAnalyticJacobianA(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int T05_3DICE_Integration_T05_Interface3DICE_initialAnalyticJacobianB(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int T05_3DICE_Integration_T05_Interface3DICE_initialAnalyticJacobianC(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int T05_3DICE_Integration_T05_Interface3DICE_initialAnalyticJacobianD(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int T05_3DICE_Integration_T05_Interface3DICE_initialAnalyticJacobianF(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int T05_3DICE_Integration_T05_Interface3DICE_functionJacG_column(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int T05_3DICE_Integration_T05_Interface3DICE_functionJacA_column(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int T05_3DICE_Integration_T05_Interface3DICE_functionJacB_column(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int T05_3DICE_Integration_T05_Interface3DICE_functionJacC_column(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int T05_3DICE_Integration_T05_Interface3DICE_functionJacD_column(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int T05_3DICE_Integration_T05_Interface3DICE_functionJacF_column(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern const char* T05_3DICE_Integration_T05_Interface3DICE_linear_model_frame(void);
extern const char* T05_3DICE_Integration_T05_Interface3DICE_linear_model_datarecovery_frame(void);
extern int T05_3DICE_Integration_T05_Interface3DICE_mayer(DATA* data, modelica_real** res, short *);
extern int T05_3DICE_Integration_T05_Interface3DICE_lagrange(DATA* data, modelica_real** res, short *, short *);
extern int T05_3DICE_Integration_T05_Interface3DICE_pickUpBoundsForInputsInOptimization(DATA* data, modelica_real* min, modelica_real* max, modelica_real*nominal, modelica_boolean *useNominal, char ** name, modelica_real * start, modelica_real * startTimeOpt);
extern int T05_3DICE_Integration_T05_Interface3DICE_setInputData(DATA *data, const modelica_boolean file);
extern int T05_3DICE_Integration_T05_Interface3DICE_getTimeGrid(DATA *data, modelica_integer * nsi, modelica_real**t);
extern void T05_3DICE_Integration_T05_Interface3DICE_function_initSynchronous(DATA * data, threadData_t *threadData);
extern void T05_3DICE_Integration_T05_Interface3DICE_function_updateSynchronous(DATA * data, threadData_t *threadData, long clockIndex);
extern int T05_3DICE_Integration_T05_Interface3DICE_function_equationsSynchronous(DATA * data, threadData_t *threadData, long clockIndex);
extern void T05_3DICE_Integration_T05_Interface3DICE_read_input_fmu(MODEL_DATA* modelData, SIMULATION_INFO* simulationData);
extern void T05_3DICE_Integration_T05_Interface3DICE_function_savePreSynchronous(DATA *data, threadData_t *threadData);
extern int T05_3DICE_Integration_T05_Interface3DICE_inputNames(DATA* data, char ** names);
extern int T05_3DICE_Integration_T05_Interface3DICE_dataReconciliationInputNames(DATA* data, char ** names);
extern int T05_3DICE_Integration_T05_Interface3DICE_initializeDAEmodeData(DATA *data, DAEMODE_DATA*);
extern int T05_3DICE_Integration_T05_Interface3DICE_functionLocalKnownVars(DATA*, threadData_t*);
extern int T05_3DICE_Integration_T05_Interface3DICE_symbolicInlineSystem(DATA*, threadData_t*);

#include "T05_3DICE_Integration_T05_Interface3DICE_literals.h"




#if defined(HPCOM) && !defined(_OPENMP)
  #error "HPCOM requires OpenMP or the results are wrong"
#endif
#if defined(_OPENMP)
  #include <omp.h>
#else
  /* dummy omp defines */
  #define omp_get_max_threads() 1
#endif

#if defined(__cplusplus)
}
#endif

#endif /* !defined(T05_3DICE_Integration_T05_Interface3DICE__MODEL_H) */


